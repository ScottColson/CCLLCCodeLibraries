// 
// Code generated by a template.
//
using System;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;

namespace CCLLC.CDS.Sdk.Metadata.Proxy 
{
	[EntityLogicalName("sdkmessagefilter")]
	public partial class SdkMessageFilter : Entity
	{
		public static string EntityLogicalName => "sdkmessagefilter";

		public SdkMessageFilter()
			: base("sdkmessagefilter") {}


		#region Late Bound Field Constants
	
		public class Fields
		{			
			public const string Id = "sdkmessagefilterid";
			public const string Availability = "availability";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomizationLevel = "customizationlevel";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCustomProcessingStepAllowed = "iscustomprocessingstepallowed";
			public const string IsCustomProcessingStepAllowedName = "iscustomprocessingstepallowedname";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsVisible = "isvisible";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string PrimaryObjectTypeCode = "primaryobjecttypecode";
			public const string PrimaryObjectTypeCodeName = "primaryobjecttypecodename";
			public const string RestrictionLevel = "restrictionlevel";
			public const string SdkMessageFilterId = "sdkmessagefilterid";
			public const string SdkMessageFilterIdUnique = "sdkmessagefilteridunique";
			public const string SdkMessageId = "sdkmessageid";
			public const string SdkMessageIdName = "sdkmessageidname";
			public const string SecondaryObjectTypeCode = "secondaryobjecttypecode";
			public const string SecondaryObjectTypeCodeName = "secondaryobjecttypecodename";
			public const string SolutionId = "solutionid";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string VersionNumber = "versionnumber";
			public const string WorkflowSdkStepEnabled = "workflowsdkstepenabled";
			public const string WorkflowSdkStepEnabledName = "workflowsdkstepenabledname";
		}

		#endregion

		[AttributeLogicalName("sdkmessagefilterid")]
		public override Guid Id
		{
			get => base.Id; 
			set => SdkMessageFilterId = value;
		}

		[AttributeLogicalName("availability")]
		public virtual int? Availability
		{
			get => GetAttributeValue<int>("availability"); 
			set => SetAttributeValue("availability", value); 
		}
		[AttributeLogicalName("componentstate")]
		public virtual GlobalEnums.eComponentstate? ComponentState
		{
			get 
			{
				var value = GetAttributeValue<OptionSetValue>("componentstate"); 
				if(value is null) return null;
				return (GlobalEnums.eComponentstate?)value.Value;
			}
		}
		[AttributeLogicalName("createdby")]
		public virtual EntityReference CreatedBy
		{
			get => GetAttributeValue<EntityReference>("createdby"); 
		}
		[AttributeLogicalName("createdbyname")]
		public virtual string CreatedByName
		{
			get => GetAttributeValue<string>("createdbyname"); 
		}
		[AttributeLogicalName("createdon")]
		public virtual DateTime? CreatedOn
		{
			get => GetAttributeValue<DateTime>("createdon"); 
		}
		[AttributeLogicalName("createdonbehalfby")]
		public virtual EntityReference CreatedOnBehalfBy
		{
			get => GetAttributeValue<EntityReference>("createdonbehalfby"); 
		}
		[AttributeLogicalName("createdonbehalfbyname")]
		public virtual string CreatedOnBehalfByName
		{
			get => GetAttributeValue<string>("createdonbehalfbyname"); 
		}
		[AttributeLogicalName("createdonbehalfbyyominame")]
		public virtual string CreatedOnBehalfByYomiName
		{
			get => GetAttributeValue<string>("createdonbehalfbyyominame"); 
		}
		[AttributeLogicalName("customizationlevel")]
		public virtual int? CustomizationLevel
		{
			get => GetAttributeValue<int>("customizationlevel"); 
		}
		[AttributeLogicalName("introducedversion")]
		public virtual string IntroducedVersion
		{
			get => GetAttributeValue<string>("introducedversion"); 
			set => SetAttributeValue("introducedversion", value); 
		}
		[AttributeLogicalName("iscustomprocessingstepallowed")]
		public virtual bool? IsCustomProcessingStepAllowed
		{
			get => GetAttributeValue<bool>("iscustomprocessingstepallowed"); 
			set => SetAttributeValue("iscustomprocessingstepallowed", value); 
		}
		[AttributeLogicalName("iscustomprocessingstepallowedname")]
		public virtual string IsCustomProcessingStepAllowedName
		{
			get => GetAttributeValue<string>("iscustomprocessingstepallowedname"); 
		}
		[AttributeLogicalName("ismanaged")]
		public virtual bool? IsManaged
		{
			get => GetAttributeValue<bool>("ismanaged"); 
		}
		[AttributeLogicalName("ismanagedname")]
		public virtual string IsManagedName
		{
			get => GetAttributeValue<string>("ismanagedname"); 
		}
		[AttributeLogicalName("isvisible")]
		public virtual bool? IsVisible
		{
			get => GetAttributeValue<bool>("isvisible"); 
		}
		[AttributeLogicalName("modifiedby")]
		public virtual EntityReference ModifiedBy
		{
			get => GetAttributeValue<EntityReference>("modifiedby"); 
		}
		[AttributeLogicalName("modifiedbyname")]
		public virtual string ModifiedByName
		{
			get => GetAttributeValue<string>("modifiedbyname"); 
		}
		[AttributeLogicalName("modifiedon")]
		public virtual DateTime? ModifiedOn
		{
			get => GetAttributeValue<DateTime>("modifiedon"); 
		}
		[AttributeLogicalName("modifiedonbehalfby")]
		public virtual EntityReference ModifiedOnBehalfBy
		{
			get => GetAttributeValue<EntityReference>("modifiedonbehalfby"); 
		}
		[AttributeLogicalName("modifiedonbehalfbyname")]
		public virtual string ModifiedOnBehalfByName
		{
			get => GetAttributeValue<string>("modifiedonbehalfbyname"); 
		}
		[AttributeLogicalName("modifiedonbehalfbyyominame")]
		public virtual string ModifiedOnBehalfByYomiName
		{
			get => GetAttributeValue<string>("modifiedonbehalfbyyominame"); 
		}
		[AttributeLogicalName("organizationid")]
		public virtual EntityReference OrganizationId
		{
			get => GetAttributeValue<EntityReference>("organizationid"); 
		}
		[AttributeLogicalName("overwritetime")]
		public virtual DateTime? OverwriteTime
		{
			get => GetAttributeValue<DateTime>("overwritetime"); 
		}
		[AttributeLogicalName("primaryobjecttypecode")]
		public virtual string PrimaryObjectTypeCode
		{
			get => GetAttributeValue<string>("primaryobjecttypecode"); 
		}
		[AttributeLogicalName("primaryobjecttypecodename")]
		public virtual string PrimaryObjectTypeCodeName
		{
			get => GetAttributeValue<string>("primaryobjecttypecodename"); 
		}
		[AttributeLogicalName("restrictionlevel")]
		public virtual int? RestrictionLevel
		{
			get => GetAttributeValue<int>("restrictionlevel"); 
			set => SetAttributeValue("restrictionlevel", value); 
		}
		[AttributeLogicalName("sdkmessagefilterid")]
		public virtual Guid SdkMessageFilterId
		{
			get => GetAttributeValue<Guid>("sdkmessagefilterid"); 
			set => SetAttributeValue("sdkmessagefilterid", value); 
		}
		[AttributeLogicalName("sdkmessagefilteridunique")]
		public virtual object SdkMessageFilterIdUnique
		{
			get => GetAttributeValue<object>("sdkmessagefilteridunique"); 
		}
		[AttributeLogicalName("sdkmessageid")]
		public virtual EntityReference SdkMessageId
		{
			get => GetAttributeValue<EntityReference>("sdkmessageid"); 
			set => SetAttributeValue("sdkmessageid", value); 
		}
		[AttributeLogicalName("sdkmessageidname")]
		public virtual string SdkMessageIdName
		{
			get => GetAttributeValue<string>("sdkmessageidname"); 
		}
		[AttributeLogicalName("secondaryobjecttypecode")]
		public virtual string SecondaryObjectTypeCode
		{
			get => GetAttributeValue<string>("secondaryobjecttypecode"); 
		}
		[AttributeLogicalName("secondaryobjecttypecodename")]
		public virtual string SecondaryObjectTypeCodeName
		{
			get => GetAttributeValue<string>("secondaryobjecttypecodename"); 
		}
		[AttributeLogicalName("solutionid")]
		public virtual object SolutionId
		{
			get => GetAttributeValue<object>("solutionid"); 
		}
		[AttributeLogicalName("supportingsolutionid")]
		public virtual object SupportingSolutionId
		{
			get => GetAttributeValue<object>("supportingsolutionid"); 
		}
		[AttributeLogicalName("versionnumber")]
		public virtual int? VersionNumber
		{
			get => GetAttributeValue<int>("versionnumber"); 
		}
		[AttributeLogicalName("workflowsdkstepenabled")]
		public virtual bool? WorkflowSdkStepEnabled
		{
			get => GetAttributeValue<bool>("workflowsdkstepenabled"); 
		}
		[AttributeLogicalName("workflowsdkstepenabledname")]
		public virtual string WorkflowSdkStepEnabledName
		{
			get => GetAttributeValue<string>("workflowsdkstepenabledname"); 
		}
	}
}
